C51 COMPILER V9.54   MAIN                                                                  10/23/2025 12:23:42 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil_v5\C51\BIN\C51.EXE Users\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Users;.\Driver) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件包含区域 */
   2          #include "main.h"
   3          #include "keyInput.h"
   4          
   5          /* 变量声明区域 */
   6          lightStatus lightState; // 台灯状态变量
   7          unsigned char lightGrade[5] = {0, 25, 50, 75, 100};     // 台灯等级
   8          unsigned char pwmCount;         // PWM周期计数（0~99，累计100×10μs=1ms）
   9          
  10          systemStatus systemState;       // 用于存储系统所处模式
  11          unsigned char keyNumber;        // 存储按键的值
  12          
  13          bit humanFlag;  // 0-表示没人，1-表示有人
  14          unsigned char timeCount;        // 人走计时
  15          unsigned long count;    // 模拟预分频器
  16          bit countFlag;  // 计时标志位
  17          
  18          /* 函数声明区域 */
  19          // 系统初始化函数
  20          void systemInit(void) {
  21   1              timer0Init();   // 初始化定时器0
*** WARNING C206 IN LINE 21 OF Users\main.c: 'timer0Init': missing function-prototype
  22   1              updateIndicators();     // 初始化指示灯
  23   1              
  24   1              lightState = LAMP_MEDIUM;       // 上电时，台灯默认中等亮度
  25   1              pwmCount = 0;   // PWM周期计数初始为 0
  26   1              
  27   1              systemState = MANUAL;   // 上电时，系统处于手动模式
  28   1              humanFlag = 1;  // 上电时默认有人
  29   1              timeCount = 0;  // 初始化倒计时时间
  30   1              count = 0;      // 初始化预分频器
  31   1              countFlag = 0;  // 默认不计时
  32   1      }
  33          
  34          // 状态机处理函数
  35          // 处理按键输入，控制系统状态切换和台灯挡位修改
  36          void stateMachine(void) {
  37   1              keyNumber = keyRead();
  38   1              switch(keyNumber) {
  39   2                      case 1:         // 系统手动/自动模式切换
  40   2                              systemState =  (systemState==MANUAL)?AUTO:MANUAL;
  41   2                              // 手动模式表示有人来
  42   2                              if(systemState==MANUAL) {
  43   3                                      humanFlag = 1;
  44   3                              }
  45   2                              // 如果是自动模式，设置中等亮度
  46   2                              if(systemState == AUTO) {
  47   3                                      lightState = LAMP_MEDIUM;
  48   3                                      // 重置计时器并开始计时
  49   3                                      timeCount = 0;
  50   3                                      countFlag = 1;
  51   3                              }
  52   2                              // 更新指示灯
  53   2                  updateIndicators();
C51 COMPILER V9.54   MAIN                                                                  10/23/2025 12:23:42 PAGE 2   

  54   2                              break;
  55   2                      case 2:    // 增加亮度挡位（循环）
  56   2                              if(systemState==MANUAL) {       // 按键2仅在手动模式下有效
  57   3                                      lightState = (lightState + 1) % 5;      // 枚举变量可以使用自增/自减操作
  58   3                              }
  59   2                              break;
  60   2                      case 3:    // 降低亮度挡位（循环）
  61   2                              if(systemState==MANUAL) {       // 按键3仅在手动模式下有效
  62   3                                      lightState = (lightState - 1 + 5) % 5;
  63   3                              }
  64   2                              break;
  65   2                      case 4:         // 用按键4模拟人来
  66   2                              // 只在自动模式下有用
  67   2                              if(systemState == AUTO) {
  68   3                                      humanFlag = 1;  // 模拟人来了，标志位置1                      
  69   3                                      // 人来了之后就重置并开始计时
  70   3                                      timeCount = 0;
  71   3                                      countFlag = 1;
  72   3                              }                       
  73   2                              break;
  74   2              }
  75   1      }
  76          
  77          // 台灯自动控制
  78          // 根据光线自动调节照明灯亮度
  79          void lampAutoControl(void) {
  80   1              // 系统模式处于非自动模式并且没检测到人
  81   1              if(systemState!=AUTO || humanFlag==0) {
  82   2                      return; // 如果不处于自动模式就结束函数
  83   2              }
  84   1              
  85   1      }
  86          
  87          // 指示灯更新函数
  88          void updateIndicators(void) {
  89   1          LED1 = !(systemState == AUTO);   // 自动模式指示灯
  90   1          LED2 = !(systemState == MANUAL); // 手动模式指示灯
  91   1      }
  92          
  93          
  94          /* Main */
  95          void main() {   
  96   1              systemInit();   // 系统初始化
  97   1              
  98   1              while(1) {
  99   2                      stateMachine(); // 处理按键输入
 100   2                      lampAutoControl();
 101   2              }
 102   1      }
 103          
 104          // 定时器0中断服务函数，每100us中断一次
 105          void timer0_ISR(void) interrupt 1 {
 106   1          // 重装载初值，保证每次定时一致
 107   1          TH0 = (65536 - 92) / 256;
 108   1          TL0 = (65536 - 92) % 256;
 109   1          
 110   1              if(countFlag) { // 计时标志位=1，则开始计时
 111   2                      count++;
 112   2                      if(count == 10000) {    // 1ms * 1 000 = 1s
 113   3                              count = 0;
 114   3                              timeCount++;
 115   3                              // 如果等于预设时间就停止计时，并设置人离开
C51 COMPILER V9.54   MAIN                                                                  10/23/2025 12:23:42 PAGE 3   

 116   3                              // 实际测量时间时7s多暂时不清楚原因，稍后再来解决
 117   3                              if(timeCount == LAMP_CLOSE_TIME) {
 118   4                                      countFlag = 0;
 119   4                                      humanFlag = 0;  // 置0表示人走了
 120   4                              }
 121   3                      }
 122   2              }       
 123   1              
 124   1              pwmCount++;
 125   1          pwmCount %= 100;
 126   1              // 简化的PWM输出逻辑
 127   1          if(humanFlag == 1) {
 128   2              // 有人，正常PWM调光
 129   2              if(pwmCount < lightGrade[lightState]) {
 130   3                  LED_MAIN = 0;    // 照明灯引脚给 0 亮
 131   3              } else {
 132   3                  LED_MAIN = 1;    // 照明灯引脚给 1 灭
 133   3              }
 134   2          } else {
 135   2              // 没人，灯熄灭
 136   2              LED_MAIN = 1;    // 照明灯引脚给 1 灭
 137   2          }
 138   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    328    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
